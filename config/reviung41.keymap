/* pre-double space
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <100>;
    flavor = "tap-preferred";
};

&led_strip { chain-length = <11>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_prntscrn {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <25 26 27>;
        };

        caps_toggle {
            bindings = <&kt CAPSLOCK>;
            key-positions = <11 10>;
        };

        gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <36 37>;
        };

        layer3 {
            bindings = <&tog 4>;
            key-positions = <37 39>;
        };
    };

    macros {
        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kt LEFT_SHIFT &kp NUMBER_4 &kt LEFT_SHIFT &kt LEFT_COMMAND>;
            label = "SCREENSHOT";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kt LEFT_SHIFT &kp NUMBER_4 &kt LEFT_SHIFT &kt LEFT_COMMAND>;
            label = "NEW_MACRO";
        };

        back: back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp LEFT_BRACKET &kt LEFT_GUI>;
            label = "BACK";
        };

        forward: forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp RIGHT_BRACKET &kt LEFT_GUI>;
            label = "FORWARD";
        };

        asp: asp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp SPACE &kt LEFT_GUI &kp A &kp S &kp P &kp RET>;
            label = "asp";
        };

        ash: ash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_GUI &kp SPACE &kt LEFT_GUI &kp A &kp S &kp H &kp RET>;
            label = "ASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp ESCAPE                       &kp Q  &kp W  &kp E         &kp R        &kp T                      &kp Y  &kp U        &kp I              &kp O    &kp P     &kp BACKSLASH
&kp TAB                          &kp A  &kp S  &kp D         &kp F        &kp G                      &kp H  &kp J        &kp K              &kp L    &kp SEMI  &kp SQT
&mt LEFT_SHIFT LEFT_PARENTHESIS  &kp Z  &kp X  &kp C         &kp V        &kp B                      &kp N  &kp M        &kp COMMA          &kp DOT  &kp FSLH  &mt RSHFT RIGHT_PARENTHESIS
                                               &kp LEFT_ALT  &lt 1 SPACE         &mt LEFT_GUI ENTER         &lt 2 SPACE  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_1    &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5          &kp NUMBER_6   &kp NUMBER_7      &kp NUMBER_8       &kp NUMBER_9  &kp NUMBER_0  &kp RIGHT_BRACKET
&kp ENTER         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_ALT  &kp TAB               &kp BACKSPACE  &kp LEFT_ARROW    &kp DOWN_ARROW     &kp UP_ARROW  &kp RIGHT     &kp ENTER
&kp C_PLAY_PAUSE  &kp C_NEXT      &back             &forward      &kp GRAVE     &screenshot           &kp DELETE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL     &kp MINUS     &kp RIGHT_SHIFT
                                                    &trans        &trans                      &trans                 &trans            &trans
            >;
        };

        raise_layer {
            bindings = <
&kp F1  &kp F2          &kp F3            &kp F3            &kp F4           &kp F5          &kp ASTRK  &kp N7  &kp N8  &kp N9  &kp KP_DIVIDE  &kp C_VOL_UP
&asp    &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &kp LEFT_ALT     &trans          &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL      &kp C_VOLUME_DOWN
&ash    &msc SCRL_LEFT  &msc SCRL_DOWN    &msc SCRL_UP      &msc SCRL_RIGHT  &trans          &kp PLUS   &kp N1  &kp N2  &kp N3  &kp N0         &kp K_MUTE
                                          &trans            &trans                   &trans             &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &to 4   &rgb_ug RGB_TOG          &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &bl BL_TOG               &none         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none            &none            &none            &none            &none   &none                    &sys_reset    &bootloader     &none           &none         &none            &none
                                                   &trans           &trans                   &trans                &trans          &trans
            >;
        };

        game_layer {
            bindings = <
&kp N1  &kp TAB    &kp Q  &kp W  &kp E  &kp R             &bt BT_NXT       &bt BT_DISC 0    &bt BT_DISC 1    &bt BT_CLR_ALL   &none            &to 0
&kp N2  &kp LSHFT  &kp A  &kp S  &kp D  &kp F             &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF
&kp N3  &kp ENTER  &kp Z  &kp X  &kp C  &kp V             &kp B            &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(0,0,100)
                          &mo 5  &kp C         &kp SPACE                   &none            &to 0
            >;
        };

        game_lower {
            bindings = <
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans          &trans          &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adgust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
